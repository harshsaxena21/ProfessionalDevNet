{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\nimport setAuthToken from './utils/setAuthToken';\nconst initialState = {};\nconst middleware = [thunk];\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware))); // setting up store subscription listner to use localstorage for storing token\n\nlet currentState = store.getState();\nstore.subscribe(() => {\n  let previousState = currentState; // prev state and new state for comparison\n\n  currentState = store.getState();\n\n  if (previousState.auth.token !== currentState.auth.token) {\n    const token = currentState.auth.token;\n    setAuthToken(token);\n  }\n});\nexport default store;","map":{"version":3,"sources":["/Users/harshsaxena/Desktop/Professional network/client/src/store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","thunk","rootReducer","setAuthToken","initialState","middleware","store","currentState","getState","subscribe","previousState","auth","token"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,YAAxB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA,MAAMC,UAAU,GAAG,CAACJ,KAAD,CAAnB;AAEA,MAAMK,KAAK,GAAGR,WAAW,CACvBI,WADuB,EAEvBE,YAFuB,EAGvBJ,mBAAmB,CAACD,eAAe,CAAC,GAAGM,UAAJ,CAAhB,CAHI,CAAzB,C,CAMA;;AACA,IAAIE,YAAY,GAAGD,KAAK,CAACE,QAAN,EAAnB;AAEAF,KAAK,CAACG,SAAN,CAAgB,MAAK;AACpB,MAAIC,aAAa,GAAGH,YAApB,CADoB,CACgB;;AACpCA,EAAAA,YAAY,GAAGD,KAAK,CAACE,QAAN,EAAf;;AAEA,MAAGE,aAAa,CAACC,IAAd,CAAmBC,KAAnB,KAA6BL,YAAY,CAACI,IAAb,CAAkBC,KAAlD,EAAyD;AACxD,UAAMA,KAAK,GAAGL,YAAY,CAACI,IAAb,CAAkBC,KAAhC;AACAT,IAAAA,YAAY,CAACS,KAAD,CAAZ;AACA;AAED,CATD;AAWA,eAAeN,KAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\nimport setAuthToken from './utils/setAuthToken';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\n// setting up store subscription listner to use localstorage for storing token\nlet currentState = store.getState();\n\nstore.subscribe(()=> {\n\tlet previousState = currentState;   // prev state and new state for comparison\n\tcurrentState = store.getState();\n\n\tif(previousState.auth.token !== currentState.auth.token) {\n\t\tconst token = currentState.auth.token\n\t\tsetAuthToken(token)\n\t}\n\n});\n\nexport default store;"]},"metadata":{},"sourceType":"module"}