{"ast":null,"code":"var _jsxFileName = \"/Users/harshsaxena/Desktop/Professional network/client/src/components/layout/Alert.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Alert = ({\n  alerts\n}) => alerts !== null && alerts.length > 0 && alerts.map(alert => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: `alert alert-${alert.alertType}`,\n  children: alert.msg\n}, alert.id, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 2\n}, this));\n\n_c = Alert;\nAlert.propTypes = {\n  alerts: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  alerts: state.alert\n});\n\nexport default connect(mapStateToProps)(Alert);\n\nvar _c;\n\n$RefreshReg$(_c, \"Alert\");","map":{"version":3,"sources":["/Users/harshsaxena/Desktop/Professional network/client/src/components/layout/Alert.js"],"names":["React","PropTypes","connect","Alert","alerts","length","map","alert","alertType","msg","id","propTypes","array","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAcA,MAAM,KAAK,IAAX,IAAkBA,MAAM,CAACC,MAAP,GAAgB,CAAlC,IAAuCD,MAAM,CAACE,GAAP,CAAWC,KAAK,iBAClF;AAEC,EAAA,SAAS,EAAG,eAAcA,KAAK,CAACC,SAAU,EAF3C;AAAA,YAGED,KAAK,CAACE;AAHR,GACMF,KAAK,CAACG,EADZ;AAAA;AAAA;AAAA;AAAA,QADkE,CAAnE;;KAAMP,K;AAQNA,KAAK,CAACQ,SAAN,GAAkB;AACjBP,EAAAA,MAAM,EAAEH,SAAS,CAACW,KAAV,CAAgBC;AADP,CAAlB;;AAIA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AACjCX,EAAAA,MAAM,EAAEW,KAAK,CAACR;AADmB,CAAL,CAA7B;;AAIA,eAAeL,OAAO,CAACY,eAAD,CAAP,CAAyBX,KAAzB,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst Alert = ({alerts}) => alerts !== null &&alerts.length > 0 && alerts.map(alert => (\n\t<div\n\t key={alert.id} \n\t className={`alert alert-${alert.alertType}`}>\n\t\t{alert.msg}\n\t</div>\n))\n\nAlert.propTypes = {\n\talerts: PropTypes.array.isRequired\n}\n\nconst mapStateToProps = state => ({\n\talerts: state.alert\n})\n\nexport default connect(mapStateToProps)(Alert);\n"]},"metadata":{},"sourceType":"module"}