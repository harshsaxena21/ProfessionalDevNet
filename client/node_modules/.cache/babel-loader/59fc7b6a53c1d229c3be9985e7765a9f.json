{"ast":null,"code":"var _jsxFileName = \"/Users/harshsaxena/Desktop/Professional network/client/src/components/auth/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { setAlert } from '../../actions/alert';\nimport PropTypes from 'prop-types';\nimport { register } from '../../actions/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = ({\n  setAlert,\n  register,\n  isAuthenticated\n}) => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\"\n  });\n  const {\n    name,\n    email,\n    password,\n    password2\n  } = formData;\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (password !== password2) {\n      setAlert(\"Passwords do not match\", \"danger\");\n    } else {\n      register({\n        name,\n        email,\n        password\n      });\n    }\n  };\n\n  if (isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 10\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"large text-primary\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"lead\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), \" Create Your Account\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Name\",\n            name: \"name\",\n            value: name,\n            onChange: onChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Email Address\",\n            name: \"email\",\n            value: email,\n            onChange: onChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"form-text\",\n            children: \"This site uses Gravatar so if you want a profile image, use a Gravatar email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Password\",\n            name: \"password\",\n            minLength: \"6\",\n            value: password,\n            onChange: onChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Confirm Password\",\n            name: \"password2\",\n            minLength: \"6\",\n            value: password2,\n            onChange: onChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          className: \"btn btn-primary round\",\n          value: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"my-1\",\n        children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"If57yD4JzonUKgYlkCtBxEM/sxI=\");\n\n_c = Register;\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {\n  setAlert,\n  register\n})(Register);\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/harshsaxena/Desktop/Professional network/client/src/components/auth/Register.js"],"names":["React","Fragment","useState","Link","Redirect","connect","setAlert","PropTypes","register","Register","isAuthenticated","formData","setFormData","name","email","password","password2","onChange","e","target","value","onSubmit","preventDefault","propTypes","func","isRequired","bool","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { setAlert } from '../../actions/alert';\nimport PropTypes from 'prop-types';\nimport { register } from '../../actions/auth';\n\n\nconst Register = ({ setAlert, register, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\",\n  });\n\n  const { name, email, password, password2 } = formData;\n\n  const onChange = (e) =>\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (password !== password2) {\n      setAlert(\"Passwords do not match\", \"danger\");\n    } else {\n      register({ name, email, password });\n    }\n  };\n\n\tif(isAuthenticated) {\n\t\treturn <Redirect to='/dashboard' />\n\t}\n\n  return (\n    <Fragment>\n      <section className=\"container\">\n        <h1 className=\"large text-primary\">Sign Up</h1>\n        <p className=\"lead\">\n          <i className=\"fas fa-user\"></i> Create Your Account\n        </p>\n        <form className=\"form\" onSubmit={onSubmit}>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              placeholder=\"Name\"\n              name=\"name\"\n              value={name}\n              onChange={onChange}\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"email\"\n              placeholder=\"Email Address\"\n              name=\"email\"\n              value={email}\n              onChange={onChange}\n              required\n            />\n            <small className=\"form-text\">\n              This site uses Gravatar so if you want a profile image, use a\n              Gravatar email\n            </small>\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"password\"\n              placeholder=\"Password\"\n              name=\"password\"\n              minLength=\"6\"\n              value={password}\n              onChange={onChange}\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n              name=\"password2\"\n              minLength=\"6\"\n              value={password2}\n              onChange={onChange}\n              required\n            />\n          </div>\n          <input\n            type=\"submit\"\n            className=\"btn btn-primary round\"\n            value=\"Register\"\n          />\n        </form>\n        <p className=\"my-1\">\n          Already have an account? <Link to=\"/login\">Sign In</Link>\n        </p>\n      </section>\n    </Fragment>\n  );\n};\n\nRegister.propTypes = {\n\tsetAlert: PropTypes.func.isRequired,\n\tregister: PropTypes.func.isRequired,\n\tisAuthenticated: PropTypes.bool\n}\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { setAlert, register })(Register);"]},"metadata":{},"sourceType":"module"}